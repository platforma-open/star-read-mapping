name: Build indexed genome references
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - "main"
    paths:
      - "genomeFiles/**"

  push:
    branches:
      - "main"
    paths:
      - "genomeFiles/**"

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: milaboratory/github-ci/actions/context/init@v4
        with:
          version-canonize: false
          branch-versioning: main

      - uses: milaboratory/github-ci/actions/context@v4
        id: ctx

    outputs:
      is-release: ${{ steps.ctx.outputs.is-release }}

  run:
    needs:
      - init

    uses: milaboratory/github-ci/.github/workflows/node-simple.yaml@v4-beta
    with:
      runs-on: "ubuntu-xlarge-amd64"

      app-name: SMART-indexed genome assets
      app-name-slug: "smart-indexed-genome-assets"
      notify-telegram: true

      node-version: "20.x"
      node-execution-path: "genomeFiles"
      is-electron-application: "false"
      always-auth: "true"
      registry-url: "https://registry.npmjs.org"

      build-script-name: ${{ needs.init.outputs.is-release == 'true' && 'build-skip' || 'build' }}
      test: false

      publish-to-public: true
      aws-login-enable: true
      gcp-login-enable: true

      npmrc-config: |
        {
          "registries": {
            "https://registry.npmjs.org/": {
              "scopes": ["platforma-open"],
              "tokenVar": "NPMJS_TOKEN"
            }
          }
        }
    secrets:
      env: |
        {
          "PL_REGISTRY_PLATFORMA_OPEN_UPLOAD_URL": ${{ toJSON(secrets.PL_REGISTRY_PLOPEN_UPLOAD_URL) }},
          "NPMJS_TOKEN": ${{ toJSON(secrets.NPMJS_TOKEN) }}
        }

      AWS_ASSUME_ROLE: ${{ secrets.AWS_CI_IAM_MONOREPO_SIMPLE_ROLE }}
      AWS_ASSUME_REGION: "eu-central-1"

      GCP_KMS_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_KMS_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_KMS_SERVICE_ACCOUNT: ${{ secrets.GCP_KMS_SERVICE_ACCOUNT }}
      GCP_KMS_LOCATION: ${{ secrets.GCP_KMS_LOCATION }}
      GCP_KMS_KEYRING: ${{ secrets.GCP_KMS_KEYRING }}
      GCP_KMS_KEY_NAME: ${{ secrets.GCP_KMS_KEY_NAME }}

      TELEGRAM_NOTIFICATION_TARGET: ${{ secrets.TG_CHANNEL_MIBUILDS }}
      TELEGRAM_API_TOKEN: ${{ secrets.TG_CI_BOT_TOKEN }}
